"""
여러 패턴을 조합한 전략적 접근 실습 모듈

Part 7 - 섹션 7.4.2 실습 코드: 다양한 프롬프트 패턴을 전략적으로 조합하여 시너지 효과를 극대화하는 방법을 학습합니다.
"""

import os
import sys
from typing import Dict, List, Any, Optional

# 상위 디렉토리를 경로에 추가하여 utils 모듈을 import할 수 있게 설정
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(os.path.dirname(os.path.dirname(current_dir)))
sys.path.append(project_root)

from utils.prompt_builder import PromptBuilder
from utils.exercise_template import run_exercise

# 주제 옵션 정의
PATTERN_COMBINATION_TOPICS = {
    "1": {"name": "비판적 사고", "topic": "역할 기반과 단계적 사고의 조합을 통한 비판적 분석", "output_format": "분석 가이드"},
    "2": {"name": "창의적 문제 해결", "topic": "제약 기반과 역할 전환의 조합을 통한 창의적 발상", "output_format": "아이디어 생성 프레임워크"},
    "3": {"name": "복잡한 의사결정", "topic": "다중 관점과 단계적 평가의 조합을 통한 의사결정", "output_format": "의사결정 매트릭스"},
    "4": {"name": "효과적 학습", "topic": "소크라테스식 질문과 구조화된 출력의 조합을 통한 학습", "output_format": "학습 프로토콜"},
    "5": {"name": "통합적 연구", "topic": "분야 간 지식 통합과 맥락 관리의 조합을 통한 연구", "output_format": "연구 방법론"}
}

# 프롬프트 요약 정보
PROMPT_SUMMARY = {
    "basic": ["주제에 대한 직접적인 질문"],
    "enhanced": [
        "목적 기반 패턴 조합: 특정 사고 과정과 결과물에 최적화된 패턴 조합",
        "시너지 촉진: 상호 보완적인 프롬프트 패턴의 전략적 조합",
        "맞춤형 워크플로우: 사고 과정에 맞춘 순차적 패턴 적용",
        "균형적 구성: 다양한 프롬프트 요소 간의 최적 비율 조정"
    ]
}

# 학습 포인트
LEARNING_POINTS = [
    "서로 다른 프롬프트 패턴이 어떻게 상호 보완하여 더 강력한 결과를 만들어내는지 이해할 수 있습니다",
    "특정 사고 과정이나 문제 해결에 최적화된 패턴 조합을 전략적으로 설계할 수 있습니다",
    "패턴 간의 시너지를 촉진하는 연결 방식과 균형 관리 전략을 학습할 수 있습니다",
    "사고 과정의 흐름에 따라 순차적으로 프롬프트 패턴을 적용하는 워크플로우를 개발할 수 있습니다",
    "특정 인지적 도전과제에 대응하는 맞춤형 패턴 조합 전략을 구축할 수 있습니다"
]

def get_basic_prompt(topic: str) -> str:
    """기본 프롬프트 생성"""
    return f"{topic}에 대해 알려주세요."

def get_enhanced_prompt(topic: str, purpose: str, output_format: str) -> str:
    """향상된 프롬프트 생성"""
    builder = PromptBuilder()
    
    # 주제별 전략적 패턴 조합 설계
    if "비판적 사고" in topic or "비판적 분석" in topic:
        # 역할 기반 + 단계적 사고 + 대조적 질문의 전략적 조합
        builder.add_role(
            "비판적 사고 전략가", 
            "복잡한 주제와 주장을 다양한 관점에서 체계적으로 분석하고 평가하는 전문가로, 특히 논리적 오류 식별, 가정 검증, 증거 평가, 대안적 설명 탐색 등의 비판적 사고 기술과 프레임워크에 깊은 전문성을 갖고 있습니다."
        )
        
        # 맥락 설정
        builder.add_context(
            f"저는 대학생으로 {topic}에 관심이 있습니다. "
            f"단순히 정보를 수용하는 것이 아니라, 주장과 아이디어를 깊이 있게 분석하고 "
            f"평가하는 능력을 개발하고 싶습니다. 특히 역할 기반 프롬프팅과 단계적 사고 유도를 "
            f"조합하여 더 체계적이고 다차원적인 비판적 분석 능력을 키우고 싶습니다. "
            f"학업과 연구에서 즉시 활용할 수 있는 실용적인 접근법이 필요합니다."
        )
        
        # 복합적 지시사항: 여러 프롬프트 패턴의 전략적 조합
        builder.add_instructions([
            "1. 역할 기반 프롬프팅과 단계적 사고 유도를 조합하여 비판적 분석을 강화하는 방법을 설명해주세요",
            "2. 다음 네 가지 비판적 사고 역할(증거 분석가, 논리 평가자, 대안적 관점 탐색자, 종합 평가자)을 통합한 체계적 분석 프레임워크를 개발해주세요",
            "3. 각 역할 전환 시 적용할 단계적 사고 과정과 핵심 질문을 제시해주세요",
            "4. 이 통합 접근법을 학술 논문 평가, 연구 제안, 시사 이슈 분석 등 다양한 상황에 적용하는 구체적인 예시와 템플릿을 제공해주세요",
            "5. 비판적 사고 과정에서 흔히 발생하는 인지적 편향과 함정을 극복하기 위한 추가적인 프롬프트 전략도 제안해주세요"
        ])

    elif "창의적 문제 해결" in topic or "창의적 발상" in topic:
        # 제약 기반 + 역할 전환 + 무작위 자극의 전략적 조합
        builder.add_role(
            "창의적 혁신 촉진자", 
            "다양한 창의적 사고 기법과 발상 전략을 조합하여 혁신적인 아이디어와 해결책을 개발하는 전문가로, 특히 제약 기반 창의성, 역할 전환 발상법, 무작위 자극 기법 등을 통합적으로 활용하여 기존의 사고 패턴을 넘어서는 혁신을 촉진하는 데 깊은 전문성을 갖고 있습니다."
        )
        
        # 맥락 설정
        builder.add_context(
            f"저는 대학생으로 {topic}에 관심이 있습니다. "
            f"기존의 틀을 벗어난 창의적 사고 능력을 개발하고, 학업과 프로젝트에서 "
            f"혁신적인 해결책을 도출하는 방법을 배우고 싶습니다. 특히 제약 기반 사고와 "
            f"역할 전환 기법을 전략적으로 조합하여 창의성을 높이는 접근법에 관심이 있습니다. "
            f"실제 문제 해결 상황에서 즉시 적용할 수 있는 실용적인 프레임워크가 필요합니다."
        )
        
        # 복합적 지시사항: 여러 프롬프트 패턴의 전략적 조합
        builder.add_instructions([
            "1. 제약 기반 사고와 역할 전환 기법을 조합하여 창의적 문제 해결을 촉진하는 방법을 설명해주세요",
            "2. 다음 세 가지 접근법(의도적 제약 도입, 다양한 관점 전환, 무작위 자극 통합)을 결합한 창의적 발상 프레임워크를 개발해주세요",
            "3. 이 통합 접근법을 단계별로 적용하기 위한 구체적인 워크플로우와 프롬프트 템플릿을 제공해주세요",
            "4. 학업 프로젝트, 연구 질문 개발, 디자인 도전과제 등 다양한 상황에 이 접근법을 적용하는 구체적인 예시를 보여주세요",
            "5. 창의적 블록을 극복하고 발상의 질과 양을 높이기 위한 추가적인 프롬프트 전략도 제안해주세요"
        ])

    elif "복잡한 의사결정" in topic or "의사결정" in topic:
        # 다중 관점 + 단계적 평가 + 구조화된 비교의 전략적 조합
        builder.add_role(
            "의사결정 전략 전문가", 
            "복잡한 상황에서 체계적이고 균형 잡힌 의사결정을 촉진하는 전문가로, 특히 다중 관점 분석, 단계적 평가 프로세스, 구조화된 비교 프레임워크 등을 통합적으로 활용하여 편향을 최소화하고 최적의 선택을 도출하는 데 깊은 전문성을 갖고 있습니다."
        )
        
        # 맥락 설정
        builder.add_context(
            f"저는 대학생으로 {topic}에 관심이 있습니다. "
            f"학업, 경력, 연구 방향 등에 관한 중요한 결정을 내릴 때 더 체계적이고 "
            f"균형 잡힌 접근법을 개발하고 싶습니다. 특히 다양한 관점을 통합하고 "
            f"단계적으로 평가하는 방법을 통해 편향을 줄이고 더 나은 결정을 내리는 "
            f"방법을 배우고 싶습니다. 실생활의 복잡한 선택 상황에 적용할 수 있는 "
            f"실용적인 의사결정 프레임워크가 필요합니다."
        )
        
        # 복합적 지시사항: 여러 프롬프트 패턴의 전략적 조합
        builder.add_instructions([
            "1. 다중 관점 탐색과 단계적 평가 과정을 조합하여 의사결정의 질을 높이는 방법을 설명해주세요",
            "2. 다음 네 가지 요소(다양한 관점 탐색, 기준 기반 평가, 결과 시나리오 분석, 메타 인지적 검토)를 통합한 의사결정 프레임워크를 개발해주세요",
            "3. 이 통합 접근법을 단계별로 적용하기 위한 구체적인 워크플로우와 의사결정 매트릭스 템플릿을 제공해주세요",
            "4. 학업 진로 선택, 연구 방향 결정, 프로젝트 우선순위 설정 등 다양한 상황에 이 접근법을 적용하는 구체적인 예시를 보여주세요",
            "5. 의사결정 과정에서 흔히 발생하는 인지적 편향과 함정을 극복하기 위한 추가적인 프롬프트 전략도 제안해주세요"
        ])

    elif "효과적 학습" in topic:
        # 소크라테스식 질문 + 구조화된 출력 + 메타인지 활성화의 전략적 조합
        builder.add_role(
            "학습 최적화 전략가", 
            "다양한 학습 전략과 인지 과학 원리를 통합하여 지식 습득과 이해의 효율성을 극대화하는 전문가로, 특히 소크라테스식 질문법, 구조화된 지식 조직화, 메타인지적 성찰 등을 결합하여 깊은 학습과 장기 기억을 촉진하는 데 깊은 전문성을 갖고 있습니다."
        )
        
        # 맥락 설정
        builder.add_context(
            f"저는 대학생으로 {topic}에 관심이 있습니다. "
            f"방대한 학습 자료를 효과적으로 소화하고 깊이 이해하며 장기적으로 기억하는 "
            f"능력을 개발하고 싶습니다. 특히 소크라테스식 질문과 구조화된 출력 요청을 "
            f"전략적으로 조합하여 학습 효율성을 높이는 방법에 관심이 있습니다. "
            f"다양한 학문 분야의 복잡한 개념을 학습할 때 적용할 수 있는 실용적인 "
            f"학습 프로토콜이 필요합니다."
        )
        
        # 복합적 지시사항: 여러 프롬프트 패턴의 전략적 조합
        builder.add_instructions([
            "1. 소크라테스식 질문과 구조화된 출력 요청을 조합하여 학습 효과를 극대화하는 방법을 설명해주세요",
            "2. 다음 세 가지 요소(개념 탐색 질문, 지식 구조화 템플릿, 메타인지적 성찰)를 통합한 학습 프로토콜을 개발해주세요",
            "3. 이 통합 접근법을 새로운 개념 학습, 복잡한 이론 이해, 시험 준비 등 다양한 학습 상황에 적용하는 단계별 프로세스를 제시해주세요",
            "4. 인문학, 사회과학, 자연과학 등 다양한 학문 분야에 이 접근법을 적용하는 구체적인 예시와 템플릿을 제공해주세요",
            "5. 학습 과정에서 흔히 경험하는 장애물(정보 과부하, 개념적 혼란, 동기 부족 등)을 극복하기 위한 추가적인 프롬프트 전략도 제안해주세요"
        ])

    else:  # 통합적 연구
        # 분야 간 지식 통합 + 맥락 관리 + 구조화된 종합의 전략적 조합
        builder.add_role(
            "학제간 연구 통합 전문가", 
            "서로 다른 학문 분야의 지식, 방법론, 관점을 효과적으로 통합하여 복잡한 연구 문제를 해결하는 전문가로, 특히 지식 체계 매핑, 개념적 연결 식별, 다양한 방법론 통합, 장기적 연구 맥락 관리 등에 깊은 전문성을 갖고 있습니다."
        )
        
        # 맥락 설정
        builder.add_context(
            f"저는 대학원생으로 {topic}에 관심이 있습니다. "
            f"여러 학문 분야를 아우르는 연구 프로젝트를 수행하면서, 서로 다른 지식 체계와 "
            f"방법론을 효과적으로 통합하고 연구의 일관성을 유지하는 방법을 배우고 싶습니다. "
            f"특히 분야 간 지식 통합과 맥락 관리를 전략적으로 조합하여 복잡한 연구를 "
            f"체계적으로 진행하는 접근법에 관심이 있습니다. 실제 학제간 연구에 적용할 수 있는 "
            f"실용적인 방법론이 필요합니다."
        )
        
        # 복합적 지시사항: 여러 프롬프트 패턴의 전략적 조합
        builder.add_instructions([
            "1. 분야 간 지식 통합과 맥락 관리를 조합하여 학제간 연구의 효과성을 높이는 방법을 설명해주세요",
            "2. 다음 네 가지 요소(지식 체계 매핑, 개념적 연결 탐색, 방법론적 통합, 연구 맥락 추적)를 결합한 통합 연구 프레임워크를 개발해주세요",
            "3. 이 통합 접근법을 연구 질문 개발, 문헌 검토, 방법론 설계, 데이터 분석, 결과 해석 등 연구의 각 단계에 적용하는 구체적인 프로세스를 제시해주세요",
            "4. 사회과학-자연과학, 인문학-기술, 경영학-심리학 등 다양한 학제간 조합에 이 접근법을 적용하는 구체적인 예시와 템플릿을 제공해주세요",
            "5. 학제간 연구에서 흔히 발생하는 도전과제(용어 차이, 방법론적 갈등, 통합의 어려움 등)를 해결하기 위한 추가적인 프롬프트 전략도 제안해주세요"
        ])
    
    # 출력 형식 지정: 구조화된 출력 요청
    builder.add_format_instructions(
        f"응답은 {output_format} 형식으로 구성해주세요. "
        f"마크다운 형식을 사용하여 제목, 소제목, 목록 등을 명확히 구분해주세요. "
        f"다음 섹션들을 포함해주세요:\n\n"
        f"1. **프롬프트 패턴 조합의 원리**: 선택한 패턴들이 어떻게 상호 보완하고 시너지를 창출하는지 설명\n"
        f"2. **통합 프레임워크**: 패턴 조합을 활용한 체계적인 접근법 제시\n"
        f"3. **단계별 적용 가이드**: 패턴 조합을 실제로 적용하는 프로세스 설명\n"
        f"4. **상황별 템플릿과 예시**: 다양한 상황에 맞는 구체적인 프롬프트 템플릿 제공\n"
        f"5. **도전과제 및 해결 전략**: 패턴 조합 시 발생할 수 있는 어려움과 대응 방법\n\n"
        f"각 섹션에서 실제 적용 가능한 구체적인 예시, 템플릿, 워크플로우를 제공해주세요. "
        f"가능한 표, 다이어그램, 프로세스 흐름도 등 시각적 요소를 활용하여 정보를 명확하게 구조화해주세요."
    )
    
    return builder.build()

def main():
    """메인 함수"""
    # 실행 결과를 저장할 때 챕터별 폴더 구조를 사용
    run_exercise(
        title="여러 패턴을 조합한 전략적 접근",
        topic_options=PATTERN_COMBINATION_TOPICS,
        get_basic_prompt=get_basic_prompt,
        get_enhanced_prompt=get_enhanced_prompt,
        prompt_summary=PROMPT_SUMMARY,
        learning_points=LEARNING_POINTS
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n프로그램이 사용자에 의해 중단되었습니다.")
    except Exception as err:
        print(f"\n오류 발생: {err}")
        print("API 키나 네트워크 연결을 확인하세요.")