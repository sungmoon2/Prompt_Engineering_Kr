"""
단계적 사고 유도 기법 실습 모듈

Part 7 - 섹션 7.2 실습 코드: 단계적 사고 유도(Chain of Thought) 프롬프팅 기법을 학습하고 
복잡한 문제 해결을 위한 다양한 접근법을 실습합니다.
"""

import os
import sys
from typing import Dict, List, Any, Optional

# 상위 디렉토리를 경로에 추가하여 utils 모듈을 import할 수 있게 설정
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(os.path.dirname(os.path.dirname(current_dir)))
sys.path.append(project_root)

from utils.prompt_builder import PromptBuilder
from utils.exercise_template import run_exercise

# 주제 옵션 정의
COT_PROMPTING_TOPICS = {
    "1": {"name": "수학 문제 해결", "topic": "복합 수학 문제 단계별 해결", "output_format": "단계별 풀이"},
    "2": {"name": "논리 퍼즐", "topic": "복잡한 논리 퍼즐 추론 과정", "output_format": "추론 과정"},
    "3": {"name": "의사결정 분석", "topic": "다기준 의사결정 분석", "output_format": "의사결정 프레임워크"},
    "4": {"name": "알고리즘 설계", "topic": "알고리즘 설계 및 최적화 과정", "output_format": "알고리즘 설계서"},
    "5": {"name": "윤리적 딜레마", "topic": "복잡한 윤리적 딜레마 분석", "output_format": "윤리적 분석"}
}

# 프롬프트 요약 정보
PROMPT_SUMMARY = {
    "basic": ["단순한 문제 해결 요청"],
    "enhanced": [
        "단계적 사고 요청: 문제 해결 과정을 단계별로 보여달라는 명시적 요청",
        "메타인지적 접근: 사고 과정과 추론 단계를 명시적으로 표현하도록 요청",
        "구체적 구조화: 각 단계별 접근 방식과 구조 제안",
        "시각화 요소: 사고 과정을 표, 트리, 흐름도 등으로 시각화 요청"
    ]
}

# 학습 포인트
LEARNING_POINTS = [
    "단계적 사고 유도 기법은 복잡한 문제 해결의 정확도와 투명성을 높이는 효과적인 프롬프팅 전략입니다",
    "문제 해결 과정을 명시적으로 보여달라고 요청하면 최종 답변의 신뢰성과 검증 가능성이 향상됩니다",
    "다양한 문제 유형에 따라 적합한 사고 체인 접근법이 다를 수 있으며, 이를 적절히 선택하는 것이 중요합니다",
    "시각화 요청은 복잡한 사고 과정을 더 명확하게 이해하는 데 도움이 됩니다",
    "자기 질문, 형식적 논리, 가정-검증 등 다양한 추론 구조를 활용하면 더 체계적인 문제 해결이 가능합니다"
]

def get_basic_prompt(topic: str) -> str:
    """기본 프롬프트 생성"""
    if "수학 문제" in topic:
        return """
다음 수학 문제를 풀어주세요:

한 원뿔의 높이는 9cm이고 밑면의 반지름은 7cm입니다. 이 원뿔의 부피와 옆면의 겉넓이를 구하세요.
"""
    elif "논리 퍼즐" in topic:
        return """
다음 논리 퍼즐을 풀어주세요:

다섯 사람(A, B, C, D, E)이 한 줄로 서 있습니다. 다음과 같은 조건이 있을 때, 이들의 순서를 파악하세요.
1. A는 B의 왼쪽에 있다.
2. C는 맨 오른쪽에 있지 않다.
3. D는 맨 왼쪽에 있다.
4. E는 B의 오른쪽에 있다.
5. B와 C는 이웃해 있지 않다.
"""
    elif "의사결정" in topic:
        return """
세 가지 투자 옵션(A, B, C)에 대한 다기준 의사결정 분석을 수행해주세요.

옵션 A: 수익률 12%, 리스크 중간, 유동성 높음, 투자 기간 5년
옵션 B: 수익률 18%, 리스크 높음, 유동성 낮음, 투자 기간 7년
옵션 C: 수익률 9%, 리스크 낮음, 유동성 중간, 투자 기간 3년

어떤 투자 옵션이 가장 좋은지 분석해주세요.
"""
    elif "알고리즘" in topic:
        return """
배열에서 두 수를 더해 특정 목표 값을 만들 수 있는 인덱스 쌍을 찾는 알고리즘을 설계해주세요.

예를 들어, 배열 [2, 7, 11, 15]와 목표 값 9가 주어진다면, 인덱스 0과 1의 값을 더하면 9가 됩니다(2 + 7 = 9).
따라서, [0, 1]을 반환해야 합니다.
"""
    elif "윤리적" in topic:
        return """
다음 윤리적 딜레마 상황을 분석해주세요:

자율주행차가 불가피한 사고 상황에서 다음 중 어떤 결정을 내려야 하는지 판단해야 합니다:
1. 직진하여 횡단보도의 다섯 명의 보행자와 충돌
2. 급선회하여 한 명의 보행자와 충돌

이 딜레마에 대한 분석과 가능한 해결책을 제시해주세요.
"""
    else:
        return f"{topic}에 대해 분석해주세요."

def get_enhanced_prompt(topic: str, purpose: str, output_format: str) -> str:
    """향상된 프롬프트 생성"""
    builder = PromptBuilder()
    
    # 주제별 역할 및 맥락 설정
    if "수학 문제" in topic:
        builder.add_role(
            "수학 교육 전문가", 
            "학생들이 수학적 사고 과정을 이해할 수 있도록 문제 해결 과정을 단계별로 명확하게 설명하는 수학 교육 전문가입니다. 복잡한 개념을 이해하기 쉽게 설명하고, 논리적 연결성을 강조하며, 시각적 표현을 활용하여 학습 효과를 높이는 능력을 갖추고 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 학생입니다. 단순히 답만 아는 것이 아니라, "
            f"문제를 어떻게 접근하고 해결하는지의 사고 과정을 배우고 싶습니다. "
            f"각 단계의 수학적 원리와 공식이 어떻게 적용되는지 이해하고, "
            f"유사한 문제에 독립적으로 적용할 수 있는 능력을 기르고 싶습니다."
        )
        
        builder.add_instructions([
            "다음 수학 문제를 단계적으로 해결해주세요: '한 원뿔의 높이는 9cm이고 밑면의 반지름은 7cm입니다. 이 원뿔의 부피와 옆면의 겉넓이를 구하세요.'",
            "각 단계별로 다음 구조를 따라 풀이 과정을 보여주세요:",
            "1. 문제 이해: 주어진 정보와 구해야 할 것을 명확히 정리",
            "2. 관련 공식 식별: 이 문제 해결에 필요한 수학적 공식과 개념 설명",
            "3. 부피 계산 과정: 원뿔의 부피 공식을 적용하는 단계별 계산",
            "4. 옆면 겉넓이 계산 과정: 원뿔의 옆면 겉넓이 공식을 유도하고 적용하는 과정",
            "5. 최종 검토: 단위 확인, 계산 검증 및 합리성 검토",
            "각 단계에서의 사고 과정과 판단 이유를 명확히 설명하고, 필요한 경우 도형을 ASCII 아트나 마크다운을 활용하여 시각화해주세요."
        ])
        
    elif "논리 퍼즐" in topic:
        builder.add_role(
            "논리 추론 전문가", 
            "복잡한 논리 퍼즐과 추론 문제를 체계적으로 접근하고 해결하는 전문가입니다. 다양한 논리적 사고 도구와 방법론을 활용하여 정보를 구조화하고, 가능성을 체계적으로 분석하며, 논리적 오류 없이 결론에 도달하는 능력을 갖추고 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 학생입니다. 복잡한 논리 퍼즐을 푸는 체계적인 접근법을 배우고 싶습니다. "
            f"특히, 정보를 어떻게 효과적으로 조직하고, 논리적 추론 과정을 명확하게 구조화하며, "
            f"모든 가능성을 누락 없이 고려하는 방법에 대해 배우고 싶습니다."
        )
        
        builder.add_instructions([
            "다음 논리 퍼즐을 단계적 추론 과정을 보여주며 해결해주세요: '다섯 사람(A, B, C, D, E)이 한 줄로 서 있습니다. 다음과 같은 조건이 있을 때, 이들의 순서를 파악하세요. 1. A는 B의 왼쪽에 있다. 2. C는 맨 오른쪽에 있지 않다. 3. D는 맨 왼쪽에 있다. 4. E는 B의 오른쪽에 있다. 5. B와 C는 이웃해 있지 않다.'",
            "다음과 같은 구조화된 접근법으로 추론 과정을 보여주세요:",
            "1. 정보 정리: 각 조건이 의미하는 바를 명확히 정리",
            "2. 초기 제약 조건 적용: 확실한 정보부터 적용 (예: D의 위치)",
            "3. 가능성 탐색: 나머지 요소들의 가능한 배치 탐색",
            "4. 제약 조건 체크: 각 가능성에 모든 제약 조건 적용",
            "5. 모순 검증: 각 시나리오에서 모순이 발생하는지 확인",
            "6. 최종 결론 도출: 모든 조건을 만족하는 유일한 배열 확인",
            "논리적 추론 과정을 표 형태나 시각적 표현을 활용하여 명확하게 보여주세요. 특히 여러 가능성을 체계적으로 좁혀나가는 과정을 강조해주세요."
        ])
        
    elif "의사결정" in topic:
        builder.add_role(
            "의사결정 분석 전문가", 
            "복잡한 의사결정 상황을 체계적으로 분석하고 평가하는 전문가입니다. 다기준 의사결정 방법론, 가치 평가 기법, 대안 비교 프레임워크 등에 전문성을 갖고 있으며, 객관적 데이터와 주관적 선호도를 균형 있게 고려하여 최적의 의사결정을 도출하는 능력을 보유하고 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 비즈니스 학생입니다. 복잡한 의사결정 상황에서 객관적이고 체계적인 "
            f"분석 방법을 배우고 싶습니다. 특히 여러 기준을 고려해야 하는 의사결정에서 "
            f"각 요소의 가중치를 어떻게 설정하고, 대안을 어떻게 비교 분석하며, "
            f"최종 결정에 어떻게 도달하는지 그 과정을 배우고 싶습니다."
        )
        
        builder.add_instructions([
            "다음 투자 옵션에 대한 다기준 의사결정 분석을 단계적으로 수행해주세요: '세 가지 투자 옵션(A, B, C)에 대한 다기준 의사결정 분석을 수행해주세요. 옵션 A: 수익률 12%, 리스크 중간, 유동성 높음, 투자 기간 5년 옵션 B: 수익률 18%, 리스크 높음, 유동성 낮음, 투자 기간 7년 옵션 C: 수익률 9%, 리스크 낮음, 유동성 중간, 투자 기간 3년'",
            "다음 구조로 의사결정 분석 과정을 보여주세요:",
            "1. 문제 구조화: 의사결정 목표와 평가 기준 정의",
            "2. 기준 가중치 설정: 각 기준(수익률, 리스크, 유동성, 투자 기간)의 상대적 중요도 평가",
            "3. 대안 평가: 각 투자 옵션을 기준별로 정량적으로 평가",
            "4. 종합 분석: 가중 점수 계산 및 민감도 분석",
            "5. 시나리오 분석: 다양한 투자자 성향이나 시장 상황에 따른 선호도 변화 검토",
            "6. 최종 권장사항: 분석 결과에 기반한 투자 의사결정 제안",
            "분석 과정에서 의사결정 매트릭스나 다른 시각적 도구를 활용하여 비교 결과를 명확하게 보여주고, 각 단계에서의 판단 근거와 사고 과정을 투명하게 설명해주세요."
        ])
        
    elif "알고리즘" in topic:
        builder.add_role(
            "알고리즘 설계 전문가", 
            "효율적인 알고리즘을 설계하고 최적화하는 소프트웨어 엔지니어링 전문가입니다. 문제 분석, 알고리즘 접근법 선택, 시간/공간 복잡도 분석, 코드 구현, 최적화에 이르는 전체 과정을 체계적으로 수행하는 능력을 갖추고 있으며, 실용적이고 효율적인 솔루션을 개발하는 데 전문성이 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 컴퓨터 과학 학생입니다. 알고리즘 문제에 접근하고 효율적인 솔루션을 "
            f"개발하는 사고 과정을 배우고 싶습니다. 단순히 답을 구하는 것을 넘어, 문제 해석부터 "
            f"접근법 선택, 알고리즘 설계, 복잡도 분석, 최적화까지의 전체 과정을 단계별로 이해하고 싶습니다."
        )
        
        builder.add_instructions([
            "다음 알고리즘 문제를 단계적으로 해결해주세요: '배열에서 두 수를 더해 특정 목표 값을 만들 수 있는 인덱스 쌍을 찾는 알고리즘을 설계해주세요. 예를 들어, 배열 [2, 7, 11, 15]와 목표 값 9가 주어진다면, 인덱스 0과 1의 값을 더하면 9가 됩니다(2 + 7 = 9). 따라서, [0, 1]을 반환해야 합니다.'",
            "다음 구조로 알고리즘 설계 및 개발 과정을 보여주세요:",
            "1. 문제 이해: 문제 요구사항과 제약 조건 명확화",
            "2. 접근법 탐색: 가능한 알고리즘 접근법 검토 (무차별 대입, 해시 테이블 활용 등)",
            "3. 알고리즘 설계: 선택한 접근법에 기반한 단계별 알고리즘 설계",
            "4. 복잡도 분석: 시간 복잡도와 공간 복잡도 분석",
            "5. 의사코드 작성: 알고리즘을 의사코드로 표현",
            "6. 코드 구현: 실제 프로그래밍 언어로 구현 (Python으로 구현)",
            "7. 최적화 고려: 가능한 최적화 방안과 트레이드오프 분석",
            "8. 테스트: 예제와 엣지 케이스를 통한 알고리즘 검증",
            "각 단계에서의 의사결정 과정과 이유를 명확히 설명하고, 특히 다양한 접근법의 효율성 비교와 최종 선택 이유를 강조해주세요."
        ])
        
    elif "윤리적" in topic:
        builder.add_role(
            "윤리적 추론 전문가", 
            "복잡한 윤리적 딜레마와 도덕적 문제를 다양한 윤리 이론과 프레임워크를 활용하여 체계적으로 분석하는 전문가입니다. 공리주의, 의무론, 덕 윤리 등 다양한 윤리적 관점을 통합하여 균형 잡힌 분석을 제공하고, 복잡한 상황에서의 윤리적 의사결정 과정을 명확하게 설명하는 능력을 갖추고 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 윤리학 학생입니다. 복잡한 윤리적 딜레마를 다양한 윤리 이론의 관점에서 "
            f"분석하는 체계적인 방법을 배우고 싶습니다. 특히, 상충되는 가치와 원칙들을 어떻게 비교 분석하고, "
            f"다양한 이해관계자의 관점을 균형 있게 고려하며, 최종적인 윤리적 판단에 어떻게 도달하는지 "
            f"그 추론 과정을 이해하고 싶습니다."
        )
        
        builder.add_instructions([
            "다음 윤리적 딜레마를 단계적으로 분석해주세요: '자율주행차가 불가피한 사고 상황에서 다음 중 어떤 결정을 내려야 하는지 판단해야 합니다: 1. 직진하여 횡단보도의 다섯 명의 보행자와 충돌 2. 급선회하여 한 명의 보행자와 충돌'",
            "다음 구조로 윤리적 분석 과정을 보여주세요:",
            "1. 딜레마 구조화: 핵심 윤리적 쟁점과 상충하는 가치 명확화",
            "2. 이해관계자 분석: 상황에 영향을 받는 모든 당사자 식별",
            "3. 다양한 윤리적 관점 적용:",
            "   a. 공리주의적 관점: 최대 행복/최소 해악 분석",
            "   b. 의무론적 관점: 도덕적 원칙과 권리 기반 분석",
            "   c. 덕 윤리 관점: 덕성과 인격 기반 분석",
            "   d. 사회 계약론적 관점: 공정성과 합의 기반 분석",
            "4. 대안적 프레임워크 고려: 책임 윤리, 케어 윤리 등 추가 관점",
            "5. 실제적 고려사항: 기술적, 법적, 사회적 맥락 검토",
            "6. 종합적 평가: 다양한 관점을 통합한 균형 잡힌 윤리적 고찰",
            "7. 대안적 해결책 모색: 딜레마를 넘어선 가능한 대안 탐색",
            "8. 정책적 함의: 사회적 차원의 윤리적 지침과 관련 정책 논의",
            "각 윤리적 관점에서의 추론 과정과 판단 근거를 명확히 설명하고, 관점 간의 긴장과 조화를 통해 복잡한 윤리적 문제에 접근하는 방법을 보여주세요."
        ])
        
    else:
        builder.add_role(
            "체계적 사고 전문가", 
            f"{topic} 분야에서 체계적이고 단계적인 접근법으로 문제를 분석하고 해결하는 전문가입니다. 복잡한 문제를 세분화하고, 명확한 사고 과정을 통해 결론에 도달하는 능력을 갖추고 있습니다."
        )
        
        builder.add_context(
            f"{topic}에 관심이 있는 학생입니다. 이 주제에 대한 깊이 있는 이해와 함께, "
            f"체계적인 문제 접근 방법과 단계별 사고 과정을 배우고 싶습니다. "
            f"각 단계에서의 논리적 추론과 판단 근거를 명확히 이해하고 싶습니다."
        )
        
        builder.add_instructions([
            f"{topic}에 관한 문제를 단계적으로 분석해주세요",
            "각 단계에서의 사고 과정을 명확히 보여주세요",
            "가능한 모든 관점과 접근법을 고려해주세요",
            "각 단계에서의 판단 근거와 추론 과정을 설명해주세요",
            "필요한 경우 시각적 도구(표, 다이어그램 등)를 활용하여 사고 과정을 표현해주세요"
        ])
    
    # 출력 형식 지정
    builder.add_format_instructions(
        f"응답은 {output_format} 형식으로 구성해주세요. "
        f"마크다운 형식을 사용하여 제목, 소제목, 단계별 구분 등을 명확히 표시해주세요. "
        f"각 단계에서의 사고 과정과 추론을 명시적으로 보여주고, 중간 결과와 계산 과정을 모두 포함해주세요. "
        f"필요한 경우 표, 결정 트리, 흐름도 등의 시각적 요소를 ASCII 아트나 마크다운 형식으로 포함하여 "
        f"사고 과정을 명확히 보여주세요. 각 단계에서 어떤 원칙이나 방법론을 적용했는지, "
        f"왜 특정 접근법을 선택했는지에 대한 메타인지적 설명도 포함해주세요."
    )
    
    return builder.build()

def main():
    """메인 함수"""
    # 실행 결과를 저장할 때 챕터별 폴더 구조를 사용
    run_exercise(
        title="단계적 사고 유도 기법",
        topic_options=COT_PROMPTING_TOPICS,
        get_basic_prompt=get_basic_prompt,
        get_enhanced_prompt=get_enhanced_prompt,
        prompt_summary=PROMPT_SUMMARY,
        learning_points=LEARNING_POINTS
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n프로그램이 사용자에 의해 중단되었습니다.")
    except Exception as err:
        print(f"\n오류 발생: {err}")
        print("API 키나 네트워크 연결을 확인하세요.")