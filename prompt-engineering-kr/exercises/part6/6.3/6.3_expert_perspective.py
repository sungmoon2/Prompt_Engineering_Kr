"""
분야 전문가처럼 대화하기 실습 모듈

Part 6 - 섹션 6.3 실습 코드: 전문 분야의 사고방식을 채택하고 전문가 관점에서 
복잡한 주제를 탐색하는 방법을 학습합니다.
"""

import os
import sys
from typing import Dict, List, Any, Optional

# 상위 디렉토리를 경로에 추가하여 utils 모듈을 import할 수 있게 설정
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(os.path.dirname(os.path.dirname(current_dir)))
sys.path.append(project_root)

from utils.prompt_builder import PromptBuilder
from utils.exercise_template import run_exercise

# 주제 옵션 정의
EXPERT_CONVERSATION_TOPICS = {
    "1": {"name": "학문 분야별 사고방식", "topic": "다양한 학문 분야의 사고방식 적용", "output_format": "비교 분석"},
    "2": {"name": "전문가 관점 활용", "topic": "효과적인 전문가 관점 요청 전략", "output_format": "전문가 분석"},
    "3": {"name": "관점 충돌 탐색", "topic": "상충되는 전문가 관점 분석 및 통합", "output_format": "다관점 분석"},
    "4": {"name": "사고방식 전환", "topic": "다양한 사고방식 간 전환 기법", "output_format": "사고 전환 분석"},
    "5": {"name": "전문가 상담 시뮬레이션", "topic": "전문가 자문 과정 재현", "output_format": "상담 시뮬레이션"}
}

# 프롬프트 요약 정보
PROMPT_SUMMARY = {
    "basic": ["일반적인 관점 요청"],
    "enhanced": [
        "구체적 전문가 프로필 설정",
        "분야별 사고 프로세스 명시",
        "다양한 관점 요청 및 비교",
        "전문가 상담 시뮬레이션"
    ]
}

# 학습 포인트
LEARNING_POINTS = [
    "다양한 전문 분야는 각각 고유한 사고방식, 개념적 도구, 프레임워크를 가지고 있으며, 이를 적용하면 더 깊이 있는 분석이 가능합니다",
    "전문가 관점을 효과적으로 요청하려면 구체적인 전문성 영역, 배경, 방법론을 명시하는 것이 중요합니다",
    "복잡한 문제는 다양한 전문가 관점을 통합적으로 고려할 때 더 균형 잡힌 이해와 해결책을 얻을 수 있습니다",
    "상충되는 전문가 관점을 체계적으로 탐색하면 주제의 복잡성을 더 깊이 이해하고 더 강건한 해결책을 개발할 수 있습니다",
    "전문가 상담이나 자문 세션을 시뮬레이션하는 방식으로 프롬프트를 구성하면 더 구체적이고 실용적인 조언을 얻을 수 있습니다"
]

def get_basic_prompt(topic: str) -> str:
    """기본 프롬프트 생성"""
    if "사고방식" in topic:
        return "다양한 학문 분야의 사고방식에 대해 설명해주세요."
    elif "전문가 관점" in topic:
        return "전문가의 관점을 활용하는 방법에 대해 알려주세요."
    elif "관점 충돌" in topic:
        return "서로 다른 전문가 관점이 충돌할 때 어떻게 분석해야 하나요?"
    elif "사고방식 전환" in topic:
        return "다양한 사고방식 간에 전환하는 방법을 알려주세요."
    elif "전문가 상담" in topic:
        return "전문가 상담이나 자문을 받을 때 어떻게 준비해야 하나요?"
    else:
        return f"{topic}에 대해 전문가적 관점에서 설명해주세요."

def get_enhanced_prompt(topic: str, purpose: str, output_format: str) -> str:
    """향상된 프롬프트 생성"""
    builder = PromptBuilder()
    
    # 분야별 역할 및 맥락 설정
    if "사고방식" in topic:
        builder.add_role(
            "학제간 연구 전문가", 
            "다양한 학문 분야의 사고방식과 방법론을 연구하고 통합하는 학제간 연구 전문가로, 여러 분야의 개념적 모델과 사고 도구를 비교 분석하고 복잡한 문제에 적용하는 데 전문성이 있습니다."
        )
        
        builder.add_context(
            "기후 변화와 같은 복잡한 글로벌 문제를 다양한 학문 분야의 사고방식으로 분석하고 싶습니다. "
            "과학자, 경제학자, 윤리학자, 정책 전문가 등 다양한 전문가들이 같은 문제를 어떻게 다르게 "
            "바라보고 접근하는지, 그리고 이러한 다양한 사고방식을 어떻게 통합하여 더 포괄적인 "
            "이해와 해결책을 도출할 수 있는지 알고 싶습니다."
        )
        
        builder.add_instructions([
            "기후 변화 문제에 대한 다음 5가지 학문적 사고방식을 체계적으로 비교 분석해주세요: 기후과학자, 경제학자, 윤리학자, 정책 전문가, 사회학자",
            "각 사고방식의 핵심 특성, 주요 개념적 도구, 분석 프레임워크, 문제 접근법을 설명해주세요",
            "각 사고방식이 기후 변화의 어떤 측면을 강조하고, 어떤 측면을 간과할 수 있는지 분석해주세요",
            "다양한 사고방식 간의 잠재적 충돌과 보완점을 식별해주세요",
            "복잡한 문제에 다양한 사고방식을 통합적으로 적용하는 구체적인 방법을 제안해주세요",
            "실제 학제간 논의처럼 각 관점별 핵심 질문, 분석 방법, 해결책 제안 방식을 보여주세요"
        ])
        
    elif "전문가 관점" in topic:
        builder.add_role(
            "메타인지 전문가", 
            "사고 과정과 전문성 개발을 연구하는 인지심리학자로, 다양한 분야의 전문가들이 어떻게 문제를 정의하고 해결하는지, 그리고 효과적으로 전문가적 사고를 활용하는 방법에 대한 전문성을 갖고 있습니다."
        )
        
        builder.add_context(
            "AI와의 대화에서 다양한 전문가의 관점을 효과적으로 이끌어내고 활용하는 방법을 배우고 싶습니다. "
            "특히 의학, 법률, 경영, 엔지니어링과 같은 전문 분야에서 깊이 있는 분석과 조언을 얻기 위해 "
            "어떻게 프롬프트를 구성하고 전문가적 사고 과정을 유도할 수 있는지 알고 싶습니다. "
            "전문가 수준의 관점과 초보자 수준의 관점이 어떻게 다른지, 그리고 어떻게 더 높은 수준의 "
            "전문성을 이끌어낼 수 있는지에 대한 구체적인 전략이 필요합니다."
        )
        
        builder.add_instructions([
            "전문가적 사고의 특성과 초보자 사고와의 차이점을 인지심리학적 관점에서 분석해주세요",
            "다양한 전문 분야(의학, 법률, 경영, 엔지니어링)별로 효과적인 전문가 관점 요청 전략과 프롬프트 패턴을 제안해주세요",
            "전문가의 암묵적 지식과 패턴 인식을 이끌어내기 위한 구체적인 프롬프트 구성 요소를 설명해주세요",
            "전문가 관점 요청의 다양한 레벨(기본, 중급, 고급)과 각 레벨에 적합한 프롬프트 예시를 제공해주세요",
            "전문가 관점의 한계와 편향 가능성을 인식하고 이를 보완하는 전략을 제안해주세요",
            "인지심리학자의 관점에서, 효과적인 전문가 관점 활용을 위한 메타인지 전략과 사고 과정 요청 방법을 설명해주세요"
        ])
        
    elif "관점 충돌" in topic:
        builder.add_role(
            "통합적 분석가", 
            "다양한 학문적, 전문적 관점 간의 충돌과 통합을 연구하는, 학제간 연구에 전문성을 가진 학자입니다. 특히 복잡한 사회적, 과학적 문제에 대한 다양한 관점을 체계적으로 분석하고, 상충되는 견해를 종합하여 더 균형 잡힌 이해를 도출하는 데 전문성이 있습니다."
        )
        
        builder.add_context(
            "인공지능 규제와 윤리에 관한 상충되는 관점들을 체계적으로 탐색하고 분석하고 싶습니다. "
            "기술 개발자, 윤리학자, 법률 전문가, 정책 입안자 등 다양한 이해관계자들이 AI 규제에 대해 "
            "서로 다른, 때로는 충돌하는 견해를 가지고 있습니다. 이러한 상충되는 관점들을 "
            "어떻게 체계적으로 분석하고, 각 관점의 강점과 한계를 파악하며, 종합적인 이해와 "
            "균형 잡힌 접근법을 개발할 수 있는지 알고 싶습니다."
        )
        
        builder.add_instructions([
            "인공지능 규제에 대한 다음 네 가지 상충되는 관점을 분석해주세요: 기술 혁신 중심(실리콘밸리), 윤리 중심(AI 윤리학자), 법적 책임 중심(법률 전문가), 공공 이익 중심(정책 입안자)",
            "각 관점의 핵심 주장, 이론적 기반, 가치 체계, 증거 평가 방식을 체계적으로 비교해주세요",
            "각 관점 간의 주요 충돌 지점과 그 근본 원인(사실 관계, 가치관, 이해관계 등)을 분석해주세요",
            "상충되는 관점들 간의 공통 기반과 잠재적 통합 지점을 파악해주세요",
            "다양한 관점을 통합하기 위한 체계적인 접근법과 대화 프레임워크를 제안해주세요",
            "실제 학술적 논쟁처럼 각 관점의 대표적 주장, 반론, 종합적 분석을 포함하는 구조화된 분석을 제시해주세요"
        ])
        
    elif "사고방식 전환" in topic:
        builder.add_role(
            "창의적 사고 전문가", 
            "다양한 사고방식과 창의적 문제 해결 기법을 연구하고 가르치는 전문가로, 특히 에드워드 드보노의 '여섯 가지 생각 모자', 디자인 사고, 시스템 사고 등 다양한 사고 프레임워크와 그 전환 기법에 전문성을 가지고 있습니다."
        )
        
        builder.add_context(
            "복잡한 비즈니스 문제를 해결하기 위해 다양한 사고방식을 의도적으로 전환하는 기법을 배우고 싶습니다. "
            "우리 팀은 종종 한 가지 관점에 고착되어 창의적인 해결책을 찾지 못하는 문제가 있습니다. "
            "어떻게 분석적, 창의적, 비판적, 감정적, 낙관적, 현실적 사고 등 다양한 사고방식 간의 전환을 "
            "체계적으로 촉진하고, 이를 통해 더 혁신적이고 종합적인 해결책을 도출할 수 있는지 알고 싶습니다."
        )
        
        builder.add_instructions([
            "다양한 사고방식 전환 기법(여섯 가지 생각 모자, 디자인 사고, 시스템 사고 등)을 비교 분석해주세요",
            "각 사고방식의 특성, 적합한 상황, 활용 방법, 장단점을 설명해주세요",
            "사고방식 전환을 위한 구체적인 프로세스와 촉진 질문들을 제안해주세요",
            "팀 환경에서 다양한 사고방식을 체계적으로 적용하는 워크숍이나 회의 구조를 설계해주세요",
            "사고방식 전환 시 발생할 수 있는 장애물과 이를 극복하는 전략을 제시해주세요",
            "실제 창의적 사고 워크숍처럼 단계별 활동, 촉진 질문, 사고 전환 신호를 포함한 구조화된 프로세스를 보여주세요"
        ])
        
    elif "전문가 상담" in topic:
        builder.add_role(
            "전략적 조언자", 
            "고위 경영진과 정책 결정자들에게 복잡한 문제에 대한 전략적 조언을 제공하는 전문가로, 다양한 분야의 전문가들로부터 최적의 자문과 통찰을 이끌어내는 데 전문성을 갖고 있습니다. 특히 효과적인 전문가 상담 설계, 핵심 질문 개발, 다양한 관점 통합에 깊은 경험이 있습니다."
        )
        
        builder.add_context(
            "우리 기업은 인공지능 기반 제품을 개발 중이며, 기술, 윤리, 법률, 비즈니스 측면에서 전문가 자문이 필요합니다. "
            "효과적인 전문가 상담을 설계하고 진행하여 최대한의 가치를 얻고 싶습니다. "
            "어떤 종류의 전문가들에게 어떤 질문을 해야 하는지, 상담 세션을 어떻게 구조화해야 하는지, "
            "그리고 다양한 전문가의 때로는 상충되는 조언을 어떻게 통합하고 의사결정에 활용해야 하는지 "
            "체계적인 접근법이 필요합니다."
        )
        
        builder.add_instructions([
            "AI 제품 개발에 필요한 주요 전문가 유형(기술, 윤리, 법률, 비즈니스)과 각 전문가에게 물어야 할 핵심 질문을 제안해주세요",
            "전문가 자문 과정의 설계와 준비 단계를 단계별로 설명해주세요",
            "효과적인 전문가 상담 세션 진행을 위한 구조, 질문 전략, 정보 수집 방법을 설명해주세요",
            "상충되는 전문가 조언을 평가하고 통합하기 위한 프레임워크를 제안해주세요",
            "전문가 조언을 의사결정에 효과적으로 활용하는 방법과 흔한 함정을 피하는 전략을 제시해주세요",
            "실제 전략적 자문 과정처럼 전문가 패널 구성, 질문 전략, 정보 통합, 의사결정 지원을 포함한 종합적인 접근법을 보여주세요"
        ])
        
    else:
        builder.add_role(
            f"{purpose} 전문가", 
            f"{topic}에 깊은 전문성과 다양한 관점을 통합하는 능력을 가진 전문가로, 복잡한 문제를 다양한 각도에서 분석하고 종합적인 이해를 제공합니다."
        )
        
        builder.add_context(
            f"{topic}에 관한 다양한 전문가의 관점을 이해하고 통합하고 싶습니다. "
            f"이 주제에 대해 서로 다른 전문 분야에서는 어떻게 접근하는지, "
            f"그리고 이러한 다양한 관점을 어떻게 효과적으로 활용하고 통합할 수 있는지 "
            f"체계적으로 이해하고 싶습니다."
        )
        
        builder.add_instructions([
            f"{topic}에 관련된 다양한 전문가 관점을 비교 분석해주세요",
            "각 관점의 특징, 강점, 한계, 적용 방식을 설명해주세요",
            "각 관점이 어떤 상황에서 가장 유용한지 제안해주세요",
            "다양한 관점 간의 상호작용과 통합 가능성을 탐색해주세요",
            "관점 통합을 위한 구체적인 프레임워크나 접근법을 제안해주세요",
            "전문가들의 대화나 토론 형식으로 다양한 관점의 상호작용을 보여주세요"
        ])
    
    # 출력 형식 지정
    builder.add_format_instructions(
        f"응답은 {output_format} 형식으로 구성해주세요. "
        f"마크다운 형식을 사용하여 제목, 소제목, 목록 등을 명확히 구분해주세요. "
        f"다양한 전문가 관점 또는 사고방식을 체계적으로 비교 분석하는 방식으로 구성하여, "
        f"각 관점의 특성, 장단점, 적용 방식을 명확히 보여주세요. "
        f"복잡한 개념이나 방법론을 설명할 때는 구체적인 예시나 사례를 활용하여 이해를 돕고, "
        f"전문가처럼 대화하기 위한 실질적인 전략과 응용 방법을 강조해주세요. "
        f"필요한 경우 표, 비교 매트릭스, 프레임워크 다이어그램 등을 활용하여 정보를 시각화해주세요."
    )
    
    return builder.build()

def main():
    """메인 함수"""
    # 실행 결과를 저장할 때 챕터별 폴더 구조를 사용
    run_exercise(
        title="분야 전문가처럼 대화하기",
        topic_options=EXPERT_CONVERSATION_TOPICS,
        get_basic_prompt=get_basic_prompt,
        get_enhanced_prompt=get_enhanced_prompt,
        prompt_summary=PROMPT_SUMMARY,
        learning_points=LEARNING_POINTS
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n프로그램이 사용자에 의해 중단되었습니다.")
    except Exception as err:
        print(f"\n오류 발생: {err}")
        print("API 키나 네트워크 연결을 확인하세요.")