"""
프롬프트 최적화 기법 실습 모듈

Part 8 - 섹션 8.3 실습 코드: 프롬프트 최적화 기법을 실습하고 응용하는 방법을 학습합니다.
이 모듈에서는 명확성, 구체성, 맥락의 균형 맞추기, 단어 선택과 구조의 중요성, 그리고
미묘한 뉘앙스 조정 기법을 실험할 수 있습니다.
"""

import os
import sys
from typing import Dict, List, Any, Optional

# 상위 디렉토리를 경로에 추가하여 utils 모듈을 import할 수 있게 설정
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(os.path.dirname(os.path.dirname(current_dir)))
sys.path.append(project_root)

from utils.prompt_builder import PromptBuilder
from utils.exercise_template import run_exercise

# 주제 옵션 정의
PROMPT_OPTIMIZATION_TOPICS = {
    "1": {"name": "균형 최적화", "topic": "명확성, 구체성, 맥락 균형 최적화 실험", "output_format": "비교 분석"},
    "2": {"name": "단어와 구조", "topic": "단어 선택과 구조 패턴 최적화 실험", "output_format": "패턴 가이드"},
    "3": {"name": "뉘앙스 조정", "topic": "미묘한 뉘앙스 표현 조정 실험", "output_format": "뉘앙스 효과 분석"},
    "4": {"name": "정보 추출 최적화", "topic": "정보 추출 프롬프트 최적화 기법", "output_format": "최적화 프레임워크"},
    "5": {"name": "창의적 콘텐츠 최적화", "topic": "창의적 콘텐츠 생성 프롬프트 최적화 기법", "output_format": "기법 가이드"}
}

# 프롬프트 요약 정보
PROMPT_SUMMARY = {
    "basic": ["주제에 대한 직접적인 질문"],
    "enhanced": [
        "최적화 목표 설정: 프롬프트의 주요 목적과 우선순위 명시",
        "구조화된 실험: 체계적인 변형 및 비교 접근법 제시",
        "세부 요소 조정: 어휘, 구조, 뉘앙스 등 미세 조정 요청",
        "평가 프레임워크: 최적화 효과 측정을 위한 기준 제공"
    ]
}

# 학습 포인트
LEARNING_POINTS = [
    "프롬프트 최적화의 핵심 요소(명확성, 구체성, 맥락)가 서로 균형을 이루어야 함을 이해합니다",
    "단어 선택과 구조 패턴이 AI 응답의 품질과 방향에 미치는 영향을 파악합니다",
    "미묘한 뉘앙스 표현이 결과에 상당한 차이를 만드는 방식을 학습합니다",
    "체계적인 실험과 비교를 통해 목적에 최적화된 프롬프트 전략을 개발할 수 있습니다",
    "다양한 최적화 기법을 조합하여 더 효과적인 프롬프트를 설계하는 능력이 향상됩니다"
]

def get_basic_prompt(topic: str) -> str:
    """기본 프롬프트 생성"""
    return f"{topic}에 대해 알려주세요."

def get_enhanced_prompt(topic: str, purpose: str, output_format: str) -> str:
    """향상된 프롬프트 생성"""
    builder = PromptBuilder()
    
    # 주제별 다른 역할과 맥락 설정
    if "균형 최적화" in topic:
        builder.add_role(
            "프롬프트 최적화 전문가", 
            "다양한 목적에 맞게 명확성, 구체성, 맥락의 최적 균형을 찾는 방법을 교육하는 전문가"
        )
        
        builder.add_context(
            f"저는 {topic}에 관심이 있는 프롬프트 엔지니어링 학습자입니다. "
            f"프롬프트의 명확성, 구체성, 맥락이 AI 응답에 어떤 영향을 미치는지 이해하고, "
            f"다양한 목적에 맞는 최적의 균형점을 찾는 체계적인 방법을 배우고 싶습니다. "
            f"특히 동일한 기본 요청에 대해 이 세 요소의 균형을 다양하게 조정하여 결과를 비교하는 "
            f"실험 설계에 관심이 있습니다."
        )
        
        builder.add_instructions([
            "기후 변화 대응이라는 주제에 대해 다음과 같은 균형 변형을 적용한 프롬프트 예시를 제공해주세요:",
            "1. 명확성 강화 변형: 지시 사항과 요구사항을 매우 명확히 한 프롬프트",
            "2. 구체성 강화 변형: 원하는 형식과 세부 사항을 상세화한 프롬프트",
            "3. 맥락 강화 변형: 배경 정보와 목적을 풍부하게 제공한 프롬프트",
            "4. 균형 잡힌 종합 변형: 세 요소를 목적에 맞게 균형 있게 조합한 프롬프트",
            "각 변형이 AI 응답에 어떤 영향을 미칠지 예측하고, 어떤 상황에서 각 변형이 가장 효과적일지 설명해주세요",
            "다양한 목적(정보 추출, 창의적 콘텐츠, 분석, 교육 등)에 맞는 최적 균형 전략도 제시해주세요"
        ])
        
    elif "단어와 구조" in topic:
        builder.add_role(
            "언어 최적화 전문가", 
            "단어 선택과 구조 패턴이 AI 응답에 미치는 미묘한 영향을 연구하고 최적화 전략을 개발하는 전문가"
        )
        
        builder.add_context(
            f"저는 {topic}에 관심이 있는 프롬프트 디자이너입니다. "
            f"프롬프트에서 단어 선택(지시 동사, 수식어, 전문 용어 등)과 "
            f"구조 패턴(선형, 계층적, 프레임, 모듈식 등)이 AI 응답의 품질과 방향에 "
            f"어떤 영향을 미치는지 이해하고 싶습니다. 다양한 단어 선택과 구조 패턴을 "
            f"실험하여 가장 효과적인 조합을 찾는 방법을 배우고 싶습니다."
        )
        
        builder.add_instructions([
            "디지털 마케팅 전략이라는 주제에 대해 다음과 같은 단어 및 구조 변형 실험을 설계해주세요:",
            "1. 지시 동사 변형: 다양한 정밀도의 지시 동사(설명해주세요, 분석해주세요, 평가해주세요 등)를 사용한 프롬프트 예시",
            "2. 수식어 변형: 다양한 수식어(간략히, 포괄적으로, 비판적으로 등)를 사용한 프롬프트 예시",
            "3. 구조 패턴 변형: 다양한 구조(선형, 계층적, 프레임, 모듈식 등)를 적용한 프롬프트 예시",
            "4. 최적 조합: 효과적인 단어 선택과 구조 패턴을 결합한 최적화된 프롬프트 예시",
            "각 변형이 AI 응답에 어떤 영향을 미칠지 분석하고, 목적별(정보 추출, 창의적 콘텐츠, 분석 등)로 최적의 단어-구조 조합을 제안해주세요",
            "단어 선택과 구조를 최적화하기 위한 체계적인 접근법과 체크리스트도 제공해주세요"
        ])
        
    elif "뉘앙스 조정" in topic:
        builder.add_role(
            "프롬프트 뉘앙스 전문가", 
            "미묘한 표현 차이와 언어적 뉘앙스를 활용하여 AI 응답을 정교하게 조정하는 기법을 연구하는 전문가"
        )
        
        builder.add_context(
            f"저는 {topic}에 관심이 있는 AI 작가입니다. "
            f"프롬프트의 미묘한 표현 차이(어조, 관점, 제약 조건, 자유도, 가정 등)가 "
            f"AI 응답의 성격과 품질에 어떤 영향을 미치는지 이해하고 싶습니다. "
            f"특히 섬세한 언어적 장치를 활용하여 결과를 정교하게 조정하는 방법을 배우고 싶습니다."
        )
        
        builder.add_instructions([
            "인공지능의 사회적 영향이라는 주제에 대해 다음과 같은 뉘앙스 조정 실험을 설계해주세요:",
            "1. 어조 변형: 다양한 어조(격식적/비격식적, 전문적/교육적, 중립적/열정적 등)를 적용한 프롬프트 예시",
            "2. 관점 프레이밍: 다양한 관점(단일/대립/다중, 과거/현재/미래 등)으로 프레임한 프롬프트 예시",
            "3. 제약과 자유도: 다양한 수준의 제약과 자유도를 설정한 프롬프트 예시",
            "4. 언어적 장치: 가정, 헤징, 절대/상대 표현 등을 활용한 프롬프트 예시",
            "각 뉘앙스 조정이 AI 응답에 어떤 미묘한 차이를 만들지 분석하고, 목적에 맞는 최적의 뉘앙스 전략을 제안해주세요",
            "뉘앙스 최적화를 위한 체계적인 워크플로우와 체크리스트도 제공해주세요"
        ])
        
    elif "정보 추출" in topic:
        builder.add_role(
            "정보 추출 프롬프트 전문가", 
            "정확하고 관련성 높은 정보를 효과적으로 추출하기 위한 프롬프트 최적화 전략을 연구하는 전문가"
        )
        
        builder.add_context(
            f"저는 {topic}에 관심이 있는 연구자입니다. "
            f"AI에서 정확하고 신뢰할 수 있는 정보를 추출하기 위한 프롬프트 최적화 기법을 배우고 싶습니다. "
            f"특히 명확성, 구체성, 맥락의 균형과 정밀한 단어 선택 및 구조화를 통해 "
            f"정보 추출 프롬프트의 효과를 극대화하는 방법을 알고 싶습니다."
        )
        
        builder.add_instructions([
            "정보 추출 프롬프트 최적화를 위한 포괄적인 프레임워크를 제공해주세요:",
            "1. 정보 추출 목적별(사실 확인, 데이터 요약, 개념 설명, 비교 분석 등) 최적화 전략",
            "2. 정보 추출 프롬프트에서 명확성, 구체성, 맥락의 이상적 균형 조합",
            "3. 정확한 정보 추출을 위한 효과적인 단어 선택과 구조 패턴",
            "4. 정보의 신뢰성과 관련성을 높이기 위한 미묘한 뉘앙스 조정 기법",
            "각 전략과 기법의 구체적인 예시와 함께, 정보 추출 프롬프트를 단계적으로 최적화하는 체계적인 방법을 설명해주세요",
            "정보 추출 프롬프트 평가 및 개선을 위한 체크리스트도 포함해주세요"
        ])
        
    else:  # 창의적 콘텐츠 최적화
        builder.add_role(
            "창의적 프롬프트 설계 전문가", 
            "독창적이고 창의적인 콘텐츠를 효과적으로 생성하기 위한 프롬프트 최적화 전략을 연구하는 전문가"
        )
        
        builder.add_context(
            f"저는 {topic}에 관심이 있는 콘텐츠 크리에이터입니다. "
            f"AI를 사용하여 독창적이고 창의적인 콘텐츠(스토리, 시나리오, 아이디어 등)를 "
            f"생성하기 위한 프롬프트 최적화 기법을 배우고 싶습니다. "
            f"특히 명확성, 구체성, 맥락의 균형과 언어적 뉘앙스를 조정하여 "
            f"창의적 결과물의 품질과 독창성을 높이는 방법을 알고 싶습니다."
        )
        
        builder.add_instructions([
            "창의적 콘텐츠 생성을 위한 프롬프트 최적화 기법에 대한 포괄적인 가이드를 제공해주세요:",
            "1. 창의적 콘텐츠 유형별(이야기, 시나리오, 아이디어 등) 최적화 전략",
            "2. 창의적 콘텐츠 프롬프트에서 명확성, 구체성, 맥락의 이상적 균형 조합",
            "3. 창의성을 자극하는 효과적인 단어 선택과 구조 패턴",
            "4. 창의적 자유도와 제약의 균형을 미세 조정하는 기법",
            "각 전략과 기법의 구체적인 예시와 함께, 창의적 콘텐츠 프롬프트를 단계적으로 최적화하는 체계적인 방법을 설명해주세요",
            "창의적 프롬프트 평가 및 개선을 위한 체크리스트도 포함해주세요"
        ])
    
    # 출력 형식 지정
    builder.add_format_instructions(
        f"응답은 {output_format} 형식으로 구성해주세요. "
        f"마크다운 형식을 사용하여 제목, 소제목, 목록 등을 명확히 구분해주세요. "
        f"이론적 설명과 실제 예시를 균형 있게 포함하고, 표와 비교 분석을 통해 다양한 접근법의 차이와 효과를 시각화해주세요. "
        f"학습자가 즉시 실천할 수 있는 단계별 가이드와 체크리스트를 포함하고, 다양한 상황과 목적에 맞게 조정할 수 있는 "
        f"유연한 프레임워크를 제공해주세요. 실제 프롬프트 예시를 적용할 때 나타나는 차이점을 명확히 강조해주세요."
    )
    
    return builder.build()

def main():
    """메인 함수"""
    # 실행 결과를 저장할 때 챕터별 폴더 구조를 사용
    run_exercise(
        title="프롬프트 최적화 기법",
        topic_options=PROMPT_OPTIMIZATION_TOPICS,
        get_basic_prompt=get_basic_prompt,
        get_enhanced_prompt=get_enhanced_prompt,
        prompt_summary=PROMPT_SUMMARY,
        learning_points=LEARNING_POINTS
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n프로그램이 사용자에 의해 중단되었습니다.")
    except Exception as err:
        print(f"\n오류 발생: {err}")
        print("API 키나 네트워크 연결을 확인하세요.")